{
  "version": 3,
  "sources": [
    "components/function.js",
    "components/signup.js",
    "index.js"
  ],
  "names": [
    "exports",
    "openNav",
    "document",
    "getElementById",
    "style",
    "width",
    "marginLeft",
    "closeNav",
    "postData",
    "url",
    "data",
    "fetch",
    "method",
    "mode",
    "cache",
    "credentials",
    "headers",
    "redirect",
    "referrer",
    "body",
    "JSON",
    "stringify",
    "then",
    "response",
    "json",
    "error",
    "warningMessage",
    "color",
    "innerHTML",
    "console",
    "log",
    "successMessage",
    "message",
    "subscribe",
    "String",
    "value",
    "getElementsByClassName",
    "mapboxgl",
    "accessToken",
    "map",
    "Map",
    "container",
    "zoom",
    "center",
    "getUniqueFeatures",
    "array",
    "comparatorProperty",
    "existingFeatureKeys",
    "uniqueFeatures",
    "filter",
    "el",
    "properties",
    "popup",
    "Popup",
    "closeButton",
    "closeOnClick",
    "nav",
    "NavigationControl",
    "addControl",
    "on",
    "addLayer",
    "type",
    "data1",
    "feature",
    "addSource",
    "geocoder",
    "MapboxGeocoder",
    "countries",
    "bbox",
    "item",
    "context",
    "i",
    "id",
    "split",
    "shift",
    "text",
    "reduce",
    "acc",
    "cur",
    "appendChild",
    "onAdd",
    "map_loaded",
    "features",
    "queryRenderedFeatures",
    "layers",
    "zipcodes",
    "resp",
    "filtered",
    "zipcode",
    "values",
    "indexOf",
    "forEach",
    "f",
    "notifications",
    "length",
    "location",
    "description",
    "messages",
    "geometry",
    "coordinates",
    "push",
    "getSource",
    "setData",
    "zipmessageadded",
    "setLngLat",
    "setHTML",
    "addTo",
    "init",
    "addEventListener"
  ],
  "mappings": "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",
  "file": "ems-messaging.e31bb0bc.js",
  "sourceRoot": "..",
  "sourcesContent": [
    "exports.openNav = function () {\n  document.getElementById(\"mySidebar\").style.width = \"400px\";\n  document.getElementById(\"main\").style.marginLeft = \"400px\";\n}\n\nexports.closeNav = function() {\n  document.getElementById(\"mySidebar\").style.width = \"0\";\n  document.getElementById(\"main\").style.marginLeft = \"0\";\n}\n",
    "function postData(url = '', data = {}) {\n  // Default options are marked with *\n    return fetch(url, {\n        method: 'POST', // *GET, POST, PUT, DELETE, etc.\n        mode: 'cors', // no-cors, cors, *same-origin\n        cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\n        credentials: 'same-origin', // include, *same-origin, omit\n        headers: {\n            'Content-Type': 'application/json',\n            // 'Content-Type': 'application/x-www-form-urlencoded',\n        },\n        redirect: 'follow', // manual, *follow, error\n        referrer: 'no-referrer', // no-referrer, *client\n        body: JSON.stringify(data), // body data type must match \"Content-Type\" header\n    })\n    .then(response => response.json()).then(data =>\n    {\n  \n      //console.log(data)\n      if(data.error){\n        const warningMessage = document.getElementById('message');\n        warningMessage.style.color = 'red';\n        warningMessage.innerHTML = data.error;\n        console.log(\"data error\"+data.error)\n        // document.getElementById(\"inputTelephone\").style.color = \"red\";\n        // document.getElementsByClassName(\"mapboxgl-ctrl-geocoder--input\").style.borderColor = \"red\";\n      }else {\n        const successMessage = document.getElementById('message');\n        successMessage.style.color = 'green';\n        successMessage.innerHTML = data.message//add code here to popup success\n      }\n    }); // parses JSON response into native JavaScript objects\n}\n\nexports.subscribe =function (){\n  //selectedclient = document.getElementById('clients').value;\n  url = 'http://apis.detroitmi.gov/messenger/clients/'\n  +'1'+ //selectedclient+\n  '/subscribe/';\n  data = {\n    \"phone_number\": String(document.getElementById('inputTelephone').value),\n    \"address\": String(document.getElementsByClassName('mapboxgl-ctrl-geocoder--input')[0].value)\n  }\n  postData(url,data);\n}\n",
    "\nimport {openNav,closeNav} from './components/function.js'\nimport {subscribe} from './components/signup.js'\n//load map\n\n  mapboxgl.accessToken = 'pk.eyJ1IjoiY2l0eW9mZGV0cm9pdCIsImEiOiJjajd3MGlodXIwZ3piMnhudmlzazVnNm44In0.BL29_7QRvcnOrVuXX_hD9A';\n  const map = new mapboxgl.Map({\n    container: 'map',\n    style: 'mapbox://styles/mapbox/light-v10',\n    zoom: 10.7,\n    center: [-83.060303, 42.348495]\n  });\n\n  function getUniqueFeatures(array, comparatorProperty) {\n    const existingFeatureKeys = {};\n    // Because features come from tiled vector data, feature geometries may be split\n    // or duplicated across tile boundaries and, as a result, features may appear\n    // multiple times in query results.\n    const uniqueFeatures = array.filter(function (el) {\n      if (existingFeatureKeys[el.properties[comparatorProperty]]) {\n        return false;\n      } else {\n        existingFeatureKeys[el.properties[comparatorProperty]] = true;\n        return true;\n      }\n    });\n\n    return uniqueFeatures;\n  }\n\n  const popup = new mapboxgl.Popup({\n    closeButton: false,\n    closeOnClick: true\n  });\n  const nav = new mapboxgl.NavigationControl();\nmap.addControl(nav, 'top-left');\n\n  map.on('load', function() {\n    map.addLayer({\n      \"id\": \"zip_codes\",\n      \"type\": \"fill\",\n      \"source\": {\n        type: 'vector',\n        url: 'mapbox://cityofdetroit.7u1xneot' //city of detroit tiles\n      },\n      \"source-layer\": \"zip_codes-c4kt15\",\n      \"paint\": {\n        'fill-color': 'rgba(200, 100, 240, 0.0)',\n        'fill-outline-color': \"white\"\n      }\n    }); //zip_codes : all zipcodes type fill with ouline pink\n\n    map.addLayer({\n      \"id\": \"ems\",\n      \"type\": \"fill\",\n      \"source\": {\n        type: 'vector',\n        url: 'mapbox://cityofdetroit.8667lu5o' // city of detroit ems alerts\n      },\n      \"source-layer\": \"Zones-4pbuzw\",\n      \"paint\": {\n        'fill-color': 'rgba(200, 100, 240, 0.0)',\n        'fill-outline-color': \"white\"\n      }\n\n    }); //ems: all zones with blue color outline type fill\n\n    let data1 = {\n      \"type\": \"FeatureCollection\",\n      \"features\": []\n    }; // this is the sourcedata to fill the zipcodes polygons\n\n    let feature = {\n      \"type\": \"Feature\",\n      \"properties\": {\n        \"description\": \"\",\n        \"zipcode\": \"\"\n      },\n      \"geometry\": {\n        \"type\": \"Polygon\",\n        \"coordinates\": [\n          []\n        ]\n      }\n    }; // Features template for data1 datasource\n\n    map.addSource('zipcode_fill', {\n      type: 'geojson',\n      data: data1\n    }); //this is the data source to fill the zipcodes polygons\n\n    map.addLayer({\n      \"id\": \"zip_codes_fill\",\n      \"type\": \"fill\",\n      \"source\": \"zipcode_fill\",\n      \"paint\": {\n        'fill-color': '#004544',\n        'fill-outline-color': '#004544'\n      }\n    }); // this is a layer of filled polygon of zipcodes\n\n    //================ geocoder for address search====================//\n    let geocoder = new MapboxGeocoder({\n      accessToken: mapboxgl.accessToken,\n\n      // limit results to North America\n      countries: 'us',\n\n      // further limit results to the geographic bounds representing the region of\n      // Detroit Michigan\n      bbox: [-83.3437, 42.2102, -82.8754, 42.5197],\n\n      // apply a client side filter to further limit results to those strictly within\n      // the detroit michigan region\n      filter: function(item) {\n        // returns true if item contains the detroit michigan region\n        return item.context.map(function (i) {\n          // this code attempts to find the `region` named `Detroit Michigan`\n          return (i.id.split('.').shift() === 'region' && i.text === 'Michigan');\n        }).reduce(function(acc, cur) {\n          return acc || cur;\n        });\n      },\n      mapboxgl: mapboxgl\n    });\n    document.getElementById('geocoder').appendChild(geocoder.onAdd(map));\n\n\n    // document.getElementById('geocoder').appendChild(geocoder.onAdd(map));\n\n    //================ geocoder for address search ends====================//\n    // Add API data to populate the map\n\n    let map_loaded = 0;\n    map.on('render', \"zip_codes\", function() {\n      if (map_loaded == 0) {\n        map_loaded = 1;\n        let features = map.queryRenderedFeatures({\n          layers: ['zip_codes']\n        });\n        //console.log(features);\n        if (features) {\n          var uniqueFeatures = getUniqueFeatures(features, \"zipcode\");\n          document.getElementById(\"zipmessage\").innerHTML = '';\n          //console.log(uniqueFeatures)\n          //console.log(data.location.value);\n          var zipcodes = null;\n          // location APi contains of list of zipcode and ems zones\n          fetch('https://apis.detroitmi.gov/messenger/locations/').then(resp => resp.json()).then((data) => {\n            //console.log(data);\n            zipcodes = data;\n            //console.log(zipcodes)\n            var filtered = uniqueFeatures.filter(function(feature) {\n              var zipcode = feature.properties.zipcode;\n              return zipcodes.zipcode.values.indexOf(zipcode) > -1;\n            });\n            filtered.forEach(f => {\n              var url = 'https://apis.detroitmi.gov/messenger/clients/1/locations/zipcode/' + String(f.properties.zipcode) + '/notifications/';\n              fetch(url, {\n                  mode: 'cors'\n                })\n                .then(resp => resp.json()) // Transform the data into json\n                .then((data) => {\n                  //console.log(data);\n                  if (data.notifications.length > 0) {\n                    feature.properties.zipcode = data.location.value;\n                    feature.properties.description = data.notifications[0].messages[0].message;\n                    feature.geometry.coordinates = f.geometry.coordinates;\n                    if (data1.features.indexOf(feature) == -1) {\n                      data1.features.push(feature);\n                      map.getSource('zipcode_fill').setData(data1);\n                    }\n                  }\n                }) // then data\n            }) // adding features with notifications to datasource\n\n          }) // fetch locations\n        } //if feature\n      } // if map loaded\n    }) // on render\n\n    var zipmessageadded = [];\n    map.on('data', 'zip_codes_fill', function() {\n\n      data1.features.forEach(f => {\n        popup.setLngLat(f.geometry.coordinates[0][0])\n          .setHTML(f.properties.description)\n          .addTo(map);\n        if (zipmessageadded.indexOf(f.properties.zipcode) == -1) {\n          zipmessageadded.push(f.properties.zipcode);\n          document.getElementById(\"zipmessage\").innerHTML = document.getElementById(\"zipmessage\").innerHTML + f.properties.description;\n        }\n      }) // for popup\n    })\n\n  }); // map on load\n\n(function init(){\n  document.getElementById(\"openSidebar\").addEventListener(\"click\", openNav);\n  document.getElementById(\"closeSidebar\").addEventListener(\"click\", closeNav);\n  document.getElementById(\"subscribe\").addEventListener(\"click\", subscribe);\n})();\n"
  ]
}